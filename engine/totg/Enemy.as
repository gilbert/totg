package engine.totg
{
	import engine.flixel.*;

	public class Enemy extends Actor
	{
    public static function create(type:String,X:int,Y:int,hooks:Object):Enemy
    {
      switch(type){
        case 'spider': return new Spider(X,Y,hooks);
        default: return new Enemy(X,Y,hooks);
      }
    }
    
    // instance vars
    //
		public var power:int;
		
		public var speed:Number;
		
    // functions generated by AI.as
		public var move_ai:Function;
		public var attack_ai:Function;
		
    // Default enemy, a killer, non-lethal square.
    // Other enemy classes should extend this class
    //
		public function Enemy(X:int,Y:int,hooks:Object)
		{
			super(X,Y,hooks);
			
      // OPTIMIZE: maybe remove these default ai's if
      //           enemy creation is a bottleneck
			this.move_ai = AI.movement('chill');
			this.attack_ai = AI.attack('peaceful');
			
			createGraphic(16,16);
			
			velocity.x = 0;
			velocity.y = 0;
			speed = 10;
			power = 0;
			
			hpMax = 15;
			hp = hpMax;
			
			width = 16;
			height = 16;
			offset.x = 0;
			offset.y = 0;
		}
		
		override public function update():void
		{
		  move_ai();
		  if(!dead){
		    attack_ai('slash');
		  }
			super.update();
		}
		
		override public function render():void
		{
			super.render();
		}
		
		override public function kill():void
		{
			if(dead) return;
			move_ai = AI.movement('chill');
			super.kill();
		}
	}
}

import engine.totg.*;

class Spider extends Enemy
{
  [Embed(source="../../content/textures/actors/spider.png")]
	private var ImgSpider:Class;
	
  public function Spider(X:int,Y:int,hooks:Object)
  {
    super(X,Y,hooks);
    
    this.move_ai = AI.movement('chase');
    this.attack_ai = AI.attack('melee');
    
    loadGraphic(ImgSpider,true,true,40);
    
    width = 16;
		height = 5;
		offset.x = 12;
		offset.y = 18;
    
    addAnimation('walk',[0,1], 3);
    addAnimation('death',[2,3,4], 8, false);
    play('walk');
    
    speed = 20;
    power = 1;
  }
  
  override public function kill():void
  {
    play('death');
    super.kill();
  }
}
